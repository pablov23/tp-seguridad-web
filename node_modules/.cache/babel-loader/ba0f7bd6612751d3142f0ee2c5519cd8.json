{"ast":null,"code":"var _jsxFileName = \"/Users/pveron/Documents/facu/React-Banking-App/src/components/LoginForm/LoginForm.js\";\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { withRouter } from 'react-router-dom';\nimport { login } from '../../auth';\n\nconst ErrorChecker = values => {\n  let errors = {}; // Email Validation\n\n  values.email = values.email.trim();\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  } // Password Validation\n\n\n  values.password = values.password.trim();\n\n  if (!values.password) {\n    errors.password = 'Required';\n  } else if (values.password.search(/[^a-zA-Z0-9-_@#$]/g) !== -1) {\n    errors.password = 'Only alphanumeric and _ - @ # $';\n  } else if (values.password.length > 40) {\n    errors.password = \"Too big, only 40 characters allowed\";\n  }\n\n  return errors;\n};\n\nconst FormLayout = ({\n  isSubmitting,\n  animationToggle\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"formContent\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"h2\", {\n  className: \"active\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }\n}, \" Iniciar Sesi\\xF3n \"), /*#__PURE__*/React.createElement(Form, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Field, {\n  type: \"email\",\n  className: `${animationToggle} fadeIn-second`,\n  name: \"email\",\n  placeholder: \"Email\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(ErrorMessage, {\n  name: \"email\",\n  component: \"div\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(Field, {\n  type: \"password\",\n  className: `${animationToggle} fadeIn-second`,\n  name: \"password\",\n  placeholder: \"Password\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(ErrorMessage, {\n  name: \"password\",\n  component: \"div\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(\"button\", {\n  type: \"submit\",\n  className: `button button-large ${animationToggle} fadeIn-third`,\n  disabled: isSubmitting,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }\n}, \"Login\")), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"formFooter\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"a\", {\n  className: \"underlineHover\",\n  href: \"#signup\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }\n}, \"Register\")));\n\nconst LoginForm = props => {\n  const animationToggle = props.inView ? 'fadeIn' : 'hidden';\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validate: ErrorChecker,\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      login(values, setSubmitting, props.history);\n    },\n    render: props => /*#__PURE__*/React.createElement(FormLayout, Object.assign({\n      animationToggle: animationToggle\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 22\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 3\n    }\n  });\n};\n\nexport default withRouter(LoginForm);","map":{"version":3,"sources":["/Users/pveron/Documents/facu/React-Banking-App/src/components/LoginForm/LoginForm.js"],"names":["React","Formik","Form","Field","ErrorMessage","withRouter","login","ErrorChecker","values","errors","email","trim","test","password","search","length","FormLayout","isSubmitting","animationToggle","LoginForm","props","inView","setSubmitting","history"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { withRouter } from 'react-router-dom';\nimport { login } from '../../auth';\n\nconst ErrorChecker = (values) => {\n  let errors = {};\n\n  // Email Validation\n  values.email = values.email.trim();\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  // Password Validation\n  values.password = values.password.trim();\n  if(!values.password) {\n    errors.password = 'Required';\n  } else if(values.password.search(/[^a-zA-Z0-9-_@#$]/g) !== -1) {\n    errors.password = 'Only alphanumeric and _ - @ # $';\n  } else if(values.password.length > 40) {\n    errors.password = \"Too big, only 40 characters allowed\";\n  }\n\n  return errors;\n}\n\nconst FormLayout = ({ isSubmitting, animationToggle }) => (\n  <div className=\"formContent\">\n    <h2 className=\"active\"> Iniciar Sesi√≥n </h2>\n    <Form>\n      <Field type=\"email\" className={`${animationToggle} fadeIn-second`}\n        name=\"email\" placeholder=\"Email\" />\n      <ErrorMessage name=\"email\" component=\"div\" />\n      <Field type=\"password\" className={`${animationToggle} fadeIn-second`} \n        name=\"password\" placeholder=\"Password\" />\n      <ErrorMessage name=\"password\" component=\"div\" />\n      <button type=\"submit\" className={`button button-large ${animationToggle} fadeIn-third`} \n        disabled={isSubmitting}>\n          Login\n      </button>\n    </Form>\n    <div className=\"formFooter\">\n      <a className=\"underlineHover\" href=\"#signup\">Register</a>\n    </div>\n  </div>\n)\n\nconst LoginForm = (props) => {\n  const animationToggle = props.inView ? 'fadeIn' : 'hidden';\n  return (\n  <Formik\n    initialValues={{ email: '', password: '' }}\n    validate={ErrorChecker}\n    onSubmit={(values, { setSubmitting }) => {\n      login(values, setSubmitting, props.history);\n    }}\n    render={props => <FormLayout animationToggle={animationToggle} {...props} />}\n  />\n)};\n\nexport default withRouter(LoginForm);\n"]},"metadata":{},"sourceType":"module"}