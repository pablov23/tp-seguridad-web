{"ast":null,"code":"import ReCAPTCHA from \"./recaptcha\";\nimport makeAsyncScriptLoader from \"react-async-script\";\n\nfunction getOptions() {\n  return typeof window !== \"undefined\" && window.recaptchaOptions || {};\n}\n\nfunction getURL() {\n  var dynamicOptions = getOptions();\n  var lang = dynamicOptions.lang ? \"&hl=\" + dynamicOptions.lang : \"\";\n  var hostname = dynamicOptions.useRecaptchaNet ? \"recaptcha.net\" : \"www.google.com\";\n  return \"https://\" + hostname + \"/recaptcha/api.js?onload=\" + callbackName + \"&render=explicit\" + lang;\n}\n\nvar callbackName = \"onloadcallback\";\nvar globalName = \"grecaptcha\";\nvar initialOptions = getOptions();\nexport default makeAsyncScriptLoader(getURL, {\n  callbackName: callbackName,\n  globalName: globalName,\n  removeOnUnmount: initialOptions.removeOnUnmount || false\n})(ReCAPTCHA);","map":{"version":3,"sources":["/Users/pveron/Documents/facu/React-Banking-App/node_modules/react-google-recaptcha/lib/es/recaptcha-wrapper.js"],"names":["ReCAPTCHA","makeAsyncScriptLoader","getOptions","window","recaptchaOptions","getURL","dynamicOptions","lang","hostname","useRecaptchaNet","callbackName","globalName","initialOptions","removeOnUnmount"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,aAAtB;AACA,OAAOC,qBAAP,MAAkC,oBAAlC;;AAEA,SAASC,UAAT,GAAsB;AACpB,SAAO,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,gBAAxC,IAA4D,EAAnE;AACD;;AACD,SAASC,MAAT,GAAkB;AAChB,MAAIC,cAAc,GAAGJ,UAAU,EAA/B;AACA,MAAIK,IAAI,GAAGD,cAAc,CAACC,IAAf,GAAsB,SAASD,cAAc,CAACC,IAA9C,GAAqD,EAAhE;AACA,MAAIC,QAAQ,GAAGF,cAAc,CAACG,eAAf,GAAiC,eAAjC,GAAmD,gBAAlE;AACA,SAAO,aAAaD,QAAb,GAAwB,2BAAxB,GAAsDE,YAAtD,GAAqE,kBAArE,GAA0FH,IAAjG;AACD;;AAED,IAAIG,YAAY,GAAG,gBAAnB;AACA,IAAIC,UAAU,GAAG,YAAjB;AACA,IAAIC,cAAc,GAAGV,UAAU,EAA/B;AAEA,eAAeD,qBAAqB,CAACI,MAAD,EAAS;AAC3CK,EAAAA,YAAY,EAAEA,YAD6B;AAE3CC,EAAAA,UAAU,EAAEA,UAF+B;AAG3CE,EAAAA,eAAe,EAAED,cAAc,CAACC,eAAf,IAAkC;AAHR,CAAT,CAArB,CAIZb,SAJY,CAAf","sourcesContent":["import ReCAPTCHA from \"./recaptcha\";\nimport makeAsyncScriptLoader from \"react-async-script\";\n\nfunction getOptions() {\n  return typeof window !== \"undefined\" && window.recaptchaOptions || {};\n}\nfunction getURL() {\n  var dynamicOptions = getOptions();\n  var lang = dynamicOptions.lang ? \"&hl=\" + dynamicOptions.lang : \"\";\n  var hostname = dynamicOptions.useRecaptchaNet ? \"recaptcha.net\" : \"www.google.com\";\n  return \"https://\" + hostname + \"/recaptcha/api.js?onload=\" + callbackName + \"&render=explicit\" + lang;\n}\n\nvar callbackName = \"onloadcallback\";\nvar globalName = \"grecaptcha\";\nvar initialOptions = getOptions();\n\nexport default makeAsyncScriptLoader(getURL, {\n  callbackName: callbackName,\n  globalName: globalName,\n  removeOnUnmount: initialOptions.removeOnUnmount || false\n})(ReCAPTCHA);"]},"metadata":{},"sourceType":"module"}