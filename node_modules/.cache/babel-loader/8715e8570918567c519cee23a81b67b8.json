{"ast":null,"code":"var _jsxFileName = \"/Users/pveron/Documents/facu/React-Banking-App/src/components/RegisterationForm/RegisterationForm.js\";\nimport React from 'react';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { backendUrl } from '../../auth';\nimport { toast } from 'react-toastify';\nimport './Registeration.css';\n\nconst ErrorChecker = values => {\n  let errors = {}; // Username Validation\n\n  values.username = values.username.trim();\n\n  if (!values.username) {\n    errors.username = 'Required';\n  } else if (values.username.search(/[^a-zA-Z0-9-]/g) !== -1) {\n    errors.username = 'Only alphanumeric and hypen allowed';\n  } else if (values.username.length > 30) {\n    errors.username = \"Too big, only 30 characters allowed\";\n  } else if (['admin', 'god'].includes(values.username)) {\n    errors.username = 'Nice Try :p';\n  } // Email Validation\n\n\n  values.email = values.email.trim();\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  } // Password Validation\n\n\n  values.password = values.password.trim();\n\n  if (!values.password) {\n    errors.password = 'Required';\n  } else if (values.password.search(/[^a-zA-Z0-9-_@#$]/g) !== -1) {\n    errors.password = 'Only alphanumeric and _ - @ # $';\n  } else if (values.password.length > 40) {\n    errors.password = \"Too big, only 40 characters allowed\";\n  } // Captcha Validation\n\n\n  values.captcha = values.captcha.trim();\n\n  if (!values.captcha) {\n    errors.captcha = 'Required';\n  }\n\n  return errors;\n};\n\nconst SignupFormLayout = ({\n  isSubmitting,\n  animationToggle,\n  setFieldValue\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"formContent registeration\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"h2\", {\n  className: \"active\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }\n}, \" Registrate \"), /*#__PURE__*/React.createElement(Form, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Field, {\n  type: \"text\",\n  className: `${animationToggle} fadeIn-second`,\n  name: \"username\",\n  placeholder: \"Username\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(ErrorMessage, {\n  name: \"username\",\n  component: \"div\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(Field, {\n  type: \"email\",\n  className: `${animationToggle} fadeIn-third`,\n  name: \"email\",\n  placeholder: \"Email\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(ErrorMessage, {\n  name: \"email\",\n  component: \"div\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(Field, {\n  type: \"password\",\n  className: `${animationToggle} fadeIn-fourth`,\n  name: \"password\",\n  placeholder: \"Password\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(ErrorMessage, {\n  name: \"password\",\n  component: \"div\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(ReCAPTCHA, {\n  className: \"captcha-style\",\n  sitekey: \"6LdSZqMUAAAAANrFaG3t7bf5RRb-gz6-DgbEGoQO\",\n  name: \"captcha\",\n  onChange: val => setFieldValue('captcha', val),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(ErrorMessage, {\n  name: \"captcha\",\n  component: \"div\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(\"button\", {\n  type: \"submit\",\n  className: `button button-large ${animationToggle} fadeIn-fourth`,\n  disabled: isSubmitting,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 7\n  }\n}, \"Submit\")), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"formFooter\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"a\", {\n  className: \"underlineHover\",\n  href: \"#login\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 7\n  }\n}, \"Ya tenes usuario? Inici\\xE1 sesi\\xF3n\")));\n\nconst SignupForm = props => {\n  const animationToggle = props.inView ? 'fadeIn' : 'hidden';\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      username: '',\n      email: '',\n      password: '',\n      captcha: ''\n    },\n    validate: ErrorChecker,\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      fetch(`${backendUrl()}/signup`, {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(values)\n      }).then(res => res.json()).then(data => {\n        if (data['success']) {\n          toast.success('Registeration successful, now you can Login');\n        } else {\n          toast.error(`Error: ${data.msg}`);\n        }\n\n        setSubmitting(false);\n      }).catch(err => {\n        toast.error('Something went wrong, can be an issue with the internet');\n        setSubmitting(false);\n      });\n    },\n    render: props => /*#__PURE__*/React.createElement(SignupFormLayout, Object.assign({\n      animationToggle: animationToggle\n    }, props, {\n      setFieldValue: props.setFieldValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 23\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 3\n    }\n  });\n};\n\nexport default SignupForm;","map":{"version":3,"sources":["/Users/pveron/Documents/facu/React-Banking-App/src/components/RegisterationForm/RegisterationForm.js"],"names":["React","ReCAPTCHA","Formik","Form","Field","ErrorMessage","backendUrl","toast","ErrorChecker","values","errors","username","trim","search","length","includes","email","test","password","captcha","SignupFormLayout","isSubmitting","animationToggle","setFieldValue","val","SignupForm","props","inView","setSubmitting","fetch","method","mode","headers","body","JSON","stringify","then","res","json","data","success","error","msg","catch","err"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { backendUrl } from '../../auth';\nimport { toast } from 'react-toastify';\nimport './Registeration.css';\n\nconst ErrorChecker = (values) => {\n  let errors = {};\n\n  // Username Validation\n  values.username = values.username.trim();\n  if(!values.username) {\n    errors.username = 'Required';\n  } else if(values.username.search(/[^a-zA-Z0-9-]/g) !== -1) {\n    errors.username = 'Only alphanumeric and hypen allowed';\n  } else if(values.username.length > 30) {\n    errors.username = \"Too big, only 30 characters allowed\";\n  } else if(['admin', 'god'].includes(values.username)) {\n    errors.username = 'Nice Try :p';\n  }\n\n  // Email Validation\n  values.email = values.email.trim();\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  // Password Validation\n  values.password = values.password.trim();\n  if(!values.password) {\n    errors.password = 'Required';\n  } else if(values.password.search(/[^a-zA-Z0-9-_@#$]/g) !== -1) {\n    errors.password = 'Only alphanumeric and _ - @ # $';\n  } else if(values.password.length > 40) {\n    errors.password = \"Too big, only 40 characters allowed\";\n  }\n\n  // Captcha Validation\n  values.captcha = values.captcha.trim();\n  if(!values.captcha) {\n    errors.captcha = 'Required';\n  }\n\n  return errors;\n}\n\nconst SignupFormLayout = ({ isSubmitting, animationToggle, setFieldValue }) => (\n  <div className=\"formContent registeration\">\n    <h2 className=\"active\"> Registrate </h2>\n    <Form>\n      <Field type=\"text\" className={`${animationToggle} fadeIn-second`} \n        name=\"username\" placeholder=\"Username\" />\n      <ErrorMessage name=\"username\" component=\"div\" />\n      <Field type=\"email\" className={`${animationToggle} fadeIn-third`} \n        name=\"email\" placeholder=\"Email\" />\n      <ErrorMessage name=\"email\" component=\"div\" />\n      <Field type=\"password\" className={`${animationToggle} fadeIn-fourth`} \n        name=\"password\" placeholder=\"Password\" />\n      <ErrorMessage name=\"password\" component=\"div\" />\n      <ReCAPTCHA\n        className=\"captcha-style\"\n        sitekey=\"6LdSZqMUAAAAANrFaG3t7bf5RRb-gz6-DgbEGoQO\"\n        name=\"captcha\"\n        onChange={(val) => setFieldValue('captcha', val)} />\n      <ErrorMessage name=\"captcha\" component=\"div\" />\n      <button type=\"submit\" className={`button button-large ${animationToggle} fadeIn-fourth`} \n        disabled={isSubmitting}>\n          Submit\n      </button>\n    </Form>\n    <div className=\"formFooter\">\n      <a className=\"underlineHover\" href=\"#login\">Ya tenes usuario? Iniciá sesión</a>\n    </div>\n  </div>\n)\n\nconst SignupForm = (props) => {\n  const animationToggle = props.inView ? 'fadeIn' : 'hidden';\n  return (\n  <Formik\n    initialValues={{ username: '', email: '', password: '', captcha: '' }}\n    validate={ErrorChecker}\n    onSubmit={(values, { setSubmitting }) => {\n      fetch(`${backendUrl()}/signup`, {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(values)\n      })\n      .then(res => res.json())\n      .then(data => {\n        if(data['success']) {\n          toast.success('Registeration successful, now you can Login');\n        } else {\n          toast.error(`Error: ${data.msg}`);\n        }\n        setSubmitting(false)\n      })\n      .catch(err => {\n        toast.error('Something went wrong, can be an issue with the internet');  \n        setSubmitting(false)\n      });\n    }}\n    render={ props => <SignupFormLayout animationToggle={animationToggle} {...props} \n      setFieldValue={props.setFieldValue} /> }\n  />\n)};\n\nexport default SignupForm;\n"]},"metadata":{},"sourceType":"module"}